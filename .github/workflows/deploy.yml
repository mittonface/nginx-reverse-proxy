name: Deploy Nginx Reverse Proxy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate nginx configuration
        run: |
          # Test nginx-initial.conf (HTTP only - no SSL dependencies)
          docker run --rm -v $PWD/nginx-initial.conf:/etc/nginx/nginx.conf:ro nginx:alpine nginx -t
          echo "‚úÖ HTTP configuration is valid"
          
          # Skip SSL configuration validation in CI - will be validated on deployment with real certificates
          echo "‚ÑπÔ∏è  SSL configuration will be validated on server with real certificates"

      - name: Validate docker-compose
        run: |
          # Check docker-compose syntax (try new plugin first, fallback to legacy)
          if docker compose version >/dev/null 2>&1; then
            docker compose config -q
          else
            # Install docker-compose if not available
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose config -q
          fi
          echo "‚úÖ Docker Compose configuration is valid"

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "nginx.conf,nginx-initial.conf,docker-compose.yml,deploy.sh,init-letsencrypt.sh,README.md,Makefile"
          target: "/root/nginx-reverse-proxy"
          strip_components: 0

      - name: Deploy reverse proxy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/nginx-reverse-proxy
            
            # Make deploy.sh executable
            chmod +x deploy.sh
            
            # Pull external images first
            docker pull nginx:alpine || true
            docker pull certbot/certbot || true
            
            # Set CI environment variable for non-interactive mode
            export CI=true
            
            # Run the deployment script
            ./deploy.sh
            
            # Clean up old images
            docker image prune -f --filter "until=24h"

      - name: SSL Certificate Status
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/nginx-reverse-proxy
            
            echo "üîí SSL Certificate Status:"
            
            for domain in "temps.mittn.ca" "camera.mittn.ca" "dragonball.mittn.ca" "jirald.mittn.ca"; do
              if [ -f "certbot/conf/live/${domain}/fullchain.pem" ]; then
                echo "‚úÖ ${domain}: SSL certificate exists"
                # Check expiration
                docker run --rm -v $PWD/certbot/conf:/etc/letsencrypt certbot/certbot certificates | grep -A 5 "$domain" || true
              else
                echo "‚ùå ${domain}: No SSL certificate found"
              fi
            done
            
            if [ ! -f "certbot/conf/live/temps.mittn.ca/fullchain.pem" ] || \
               [ ! -f "certbot/conf/live/camera.mittn.ca/fullchain.pem" ] || \
               [ ! -f "certbot/conf/live/dragonball.mittn.ca/fullchain.pem" ] || \
               [ ! -f "certbot/conf/live/jirald.mittn.ca/fullchain.pem" ]; then
              echo ""
              echo "üìù To set up SSL certificates, run: ./init-letsencrypt.sh"
              echo "   Make sure DNS records point to this server first!"
            fi